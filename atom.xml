<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spike的个人博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-02-15T08:43:45.426Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Spike</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>POSIX共享内存实例</title>
    <link href="http://example.com/2022/02/15/POSIX%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98%E5%AE%9E%E4%BE%8B/"/>
    <id>http://example.com/2022/02/15/POSIX%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98%E5%AE%9E%E4%BE%8B/</id>
    <published>2022-02-15T08:20:18.000Z</published>
    <updated>2022-02-15T08:43:45.426Z</updated>
    
    <content type="html"><![CDATA[<h2 id="POSIX-共享内存"><a href="#POSIX-共享内存" class="headerlink" title="POSIX 共享内存"></a>POSIX 共享内存</h2><p>主要调用以下api</p><h3 id="shm-open"><a href="#shm-open" class="headerlink" title="shm_open"></a>shm_open</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">shm_open</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *name,<span class="type">int</span> oflag,<span class="type">mode_t</span> mode)</span></span><br></pre></td></tr></table></figure><p>需要以下头文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/mman.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span>        <span class="comment">/* 对于模式常量 */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span>           <span class="comment">/* 对于 oflag 常量 */</span></span></span><br></pre></td></tr></table></figure><p>该函数会打开或创建一个共享内存对象，通常保存在&#x2F;dev&#x2F;shm&#x2F;路径下，实质上就是一个文件，linux认为所有的对象都是文件，可以使用文件操作函数，</p><p>返回值为文件描述符fd，成功时为正数，失败时为负数</p><p>各参数含义：</p><ul><li>name：文件名，不能填写路径</li><li>oflag：位掩码，表示文件操作属性<ul><li><strong>O_RDONLY</strong> 只读</li><li><strong>O_RDWR</strong> 读写</li><li><strong>O_CREAT</strong> 若文件不存在，则创建</li><li><strong>O_EXCL</strong> 在指定O_CREAT的情况下若文件已存在，则返回错误</li></ul></li><li><strong>mode：</strong> 表示文件的共享模式，应在指定O_CREAT的情况下使用，即创建文件后的用户权限</li></ul><h3 id="ftruncate"><a href="#ftruncate" class="headerlink" title="ftruncate"></a>ftruncate</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">ftruncate</span><span class="params">(<span class="type">int</span> fd, <span class="type">off_t</span> length)</span></span><br></pre></td></tr></table></figure><p>位于头文件 <em>unistd.h</em> 中<br>ftruncate()会将参数 fd 指定的文件大小改为参数 length 指定的大小。如果原来的文件大小比参数length大，则超过的部分会被删去。<br>off_t 是 long 的宏<br>使用该函数时，打开的文件必须具有写入权限<br>该函数的功能是重置文件的大小，任何open函数打开的文件都可以用该函数，包括但不限于shm_open打开的文件<br>执行成功则返回0，失败返回-1，错误原因存于errno（errno.h中定义的一个int型变量）。</p><h3 id="mmap"><a href="#mmap" class="headerlink" title="mmap"></a>mmap</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span>* <span class="title function_">mmap</span><span class="params">(<span class="type">void</span>* start,<span class="type">size_t</span> length,<span class="type">int</span> prot,<span class="type">int</span> flags,<span class="type">int</span> fd,<span class="type">off_t</span> offset)</span>;</span><br></pre></td></tr></table></figure><p>位于头文件 <em>sys&#x2F;mman.h</em> 中<br><strong>该函数的功能是将文件映射到内存中，使得我们用操作内存指针的方式来操作文件数据。</strong><br>文件被映射到多个页上，如果文件的大小不是所有页的大小之和，最后一个页不被使用的空间将会清零。 即映射的内存空间最小单位为页<br>其中各参数：</p><ul><li><p><strong>start：</strong> 将文件映射到的内存地址，一般应该传递NULL来由Linux内核指定。</p></li><li><p><strong>length：</strong> 映射区的长度。长度单位是以字节为单位，不足一内存页按一内存页处理</p></li><li><p><strong>prot:</strong> 是一个位掩码，映射的内存区域的操作权限（保护属性），包括PROT_READ、PROT_WRITE、PROT_EXEC、PROT_NONE</p></li><li><p>flags: </p><p>位掩码，指定映射对象的类型，包括</p><ul><li>MAP_SHARED： 与其它所有映射这个对象的进程共享映射空间。对共享区的写入，相当于输出到文件。直到msync()或者munmap()被调用，文件实际上不会被更新。</li><li>MAP_PRIVATE： 建立一个写入时拷贝的私有映射。内存区域的写入不会影响到原文件。这个标志和以上标志是互斥的，只能使用其中一个。</li><li>MAP_ANON: 进行匿名映射，此时fd参数要填-1</li><li>等</li></ul></li><li><p><strong>fd：</strong> 用来建立映射区的文件描述符，用 shm_open打开或者open打开的文件。</p></li><li><p><strong>offset：</strong> 映射文件相对于文件头的偏移位置，应该按4096字节对齐。</p></li></ul><p>成功执行时，mmap()返回被映射区的指针；失败时，mmap()返回MAP_FAILED。<br>要对该映射的内存写入内容，可以使用sprintf()或write()函数，在此之前先将mmap的返回值类型由 void* 转换成 char*</p><h3 id="munmap"><a href="#munmap" class="headerlink" title="munmap"></a>munmap</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">munmap</span><span class="params">(<span class="type">void</span> *start,<span class="type">size_t</span> length)</span></span><br></pre></td></tr></table></figure><p>使用头文件 <em>unistd.h</em> 和 <em>sys&#x2F;mman.h</em><br><strong>函数功能是取消参数start所指的映射内存起始地址，参数length则是欲取消的内存大小。</strong><br>当进程结束或利用exec相关函数来执行其他程序时，映射内存会自动解除，但关闭对应的文件描述符时不会解除映射。<br>返回值: 如果解除映射成功则返回0，否则返回－1，错误原因存于errno中</p><h3 id="shn-unlink"><a href="#shn-unlink" class="headerlink" title="shn_unlink"></a>shn_unlink</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">shm_unlink</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *name)</span>:</span><br></pre></td></tr></table></figure><p>使用头文件 <em>sys&#x2F;stat.h</em> 和 <em>fcntl.h</em><br>该函数用于删除指定的共享内存对象</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;POSIX-共享内存&quot;&gt;&lt;a href=&quot;#POSIX-共享内存&quot; class=&quot;headerlink&quot; title=&quot;POSIX 共享内存&quot;&gt;&lt;/a&gt;POSIX 共享内存&lt;/h2&gt;&lt;p&gt;主要调用以下api&lt;/p&gt;
&lt;h3 id=&quot;shm-open&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="操作系统" scheme="http://example.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="C/C++" scheme="http://example.com/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>CMake-VSCode编译运行C++程序简单教程</title>
    <link href="http://example.com/2021/10/01/CMake-VSCode%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8CC-%E7%A8%8B%E5%BA%8F%E7%AE%80%E5%8D%95%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2021/10/01/CMake-VSCode%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8CC-%E7%A8%8B%E5%BA%8F%E7%AE%80%E5%8D%95%E6%95%99%E7%A8%8B/</id>
    <published>2021-10-01T10:39:20.000Z</published>
    <updated>2022-02-14T12:04:03.900Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本教程旨在帮助不想使用vs，但是又想使用VScode的调试功能而不想手动编译的人，只能最低限度满足要求，很多地方还不完善，如不支持源代码在不同文件夹下编译，不包含CMake语法的教程，需要进阶操作请自行搜索CMake语法，</p><h1 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h1><h2 id="安装和配置MinGw"><a href="#安装和配置MinGw" class="headerlink" title="安装和配置MinGw"></a>安装和配置MinGw</h2><ul><li><p>MinGw中包含gcc,g++等多种编译器，可以在windows上使用（windows无法直接安装gcc），下载链接：<a href="https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/8.1.0/threads-win32/seh/x86_64-8.1.0-release-win32-seh-rt_v6-rev0.7z/download">https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/8.1.0/threads-win32/seh/x86_64-8.1.0-release-win32-seh-rt_v6-rev0.7z/download</a></p><p>解压时尽量解压在某个盘的根目录。</p></li><li><p>将MinGW下bin目录的路径添加到环境变量中</p></li><li><p>进入bin文件夹，找到<em>mingw32-make.exe</em>，复制一份，将其中一份重命名为<em>make.exe</em>（还是保存在bin文件夹中）</p></li><li><p>验证是否配置成功，cmd中输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc -v</span><br><span class="line">make -v</span><br></pre></td></tr></table></figure><p>可以轻易判断是否安装成功</p></li></ul><h2 id="安装Cmake"><a href="#安装Cmake" class="headerlink" title="安装Cmake"></a>安装Cmake</h2><p>下载链接：<a href="https://cmake.org/download/">https://cmake.org/download/</a></p><p>选择一个后缀为.msi的安装包下载，尽量选最上面的，比较稳定，如图</p><p><img src="https://img-blog.csdnimg.cn/20190625001153172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01ha2VyQ2xvdWQ=,size_16,color_FFFFFF,t_70" alt="ababa"></p><p>安装时记得勾选“Add CMake to the system PATH for all users”，这样就不用自己再配置环境变量了</p><p>安装后在cmd输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake -version</span><br></pre></td></tr></table></figure><p>验证是否安装成功</p><h2 id="VSCode-环境"><a href="#VSCode-环境" class="headerlink" title="VSCode 环境"></a>VSCode 环境</h2><p>需要的插件有</p><ul><li><p>C&#x2F;C++</p></li><li><p>CMake</p></li><li><p>CMake Tools</p><p><img src="D:\BLOG\source\img\chajian.jpg" alt="插件"></p></li></ul><h1 id="CMake编写"><a href="#CMake编写" class="headerlink" title="CMake编写"></a>CMake编写</h1><h2 id="手动编译"><a href="#手动编译" class="headerlink" title="手动编译"></a>手动编译</h2><p>选择一个文件夹做工作区，在该文件夹下新建文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CMakeLists.txt</span><br></pre></td></tr></table></figure><p>输入以下内容</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.0</span>.<span class="number">0</span>)  //指定使用的CMake的最低版本</span><br><span class="line"><span class="keyword">project</span>(h)  //指定一个项目名称</span><br><span class="line"><span class="keyword">SET</span>(CMAKE_BUILD_TYPE <span class="string">&quot;Debug&quot;</span>) //指定为调试模式，这样就可以用VSC的调试功能了</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_FLAGS <span class="string">&quot;$&#123;CMAKE_CXX_FLAGS&#125; -g&quot;</span>)</span><br><span class="line"><span class="keyword">aux_source_directory</span>(. SRC_LIST)   //前面的<span class="string">&quot;.&quot;</span>表示该目录下所有.cpp文件，把这些文件用<span class="string">&quot;SRC_LIST&quot;</span>代替</span><br><span class="line"><span class="keyword">add_executable</span>(hi <span class="variable">$&#123;SRC_LIST&#125;</span>) // <span class="string">&quot;hi&quot;</span>是生成的可执行文件名称，需要自己指定</span><br></pre></td></tr></table></figure><p>保存后可能vscode会直接开始自动build，创建build文件夹，同时也可以看到可执行文件也已经生成在build文件夹下，如果没有自动build，在终端中输入如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake -G &quot;Unix Makefiles&quot; .. //将CMakeLists翻译为Makeflies</span><br><span class="line">make //编译</span><br></pre></td></tr></table></figure><p>之后可以看到</p><p><img src="D:\BLOG\source\img\build.jpg" alt="build"></p><h2 id="启用调试"><a href="#启用调试" class="headerlink" title="启用调试"></a>启用调试</h2><p>在主程序的页面，按f5，选择gdb，如图（我已经配置过了这里是网图）</p><p><img src="https://pic4.zhimg.com/80/v2-9c2e2b382afd45e6eae00f7a56a52a37_720w.jpg" alt="dubug"></p><p>点击后会生成launch.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;g++.exe - Build and debug active file&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppdbg&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;/build/hi.exe&quot;</span><span class="punctuation">,</span>  <span class="comment">//这里需要改成该项目自己指定的可执行文件名称</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stopAtEntry&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;fileDirname&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;environment&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;externalConsole&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;MIMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;miDebuggerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:\\MinGW\\mingw64\\bin\\gdb.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;setupCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enable pretty-printing for gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-enable-pretty-printing&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;ignoreFailures&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;make&quot;</span>  <span class="comment">//这里修改为&quot;make&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>之后配置task.json文件复制粘贴如下代码</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;/build&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span> </span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmake&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmake&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;-G&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Unix Makefiles&quot;</span><span class="punctuation">,</span> <span class="string">&quot;-DCMAKE_BUILD_TYPE=Debug&quot;</span><span class="punctuation">,</span> <span class="string">&quot;..&quot;</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;make&quot;</span><span class="punctuation">,</span> </span><br><span class="line">        <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;make&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>之后就可以直接f5启用调试功能了</p><h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><p>先输入上述命令build（可以写个批处理文件执行），再按f5。</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>CMakeLists.txt中指定的可执行文件名称与launch,json中所指定的必须相同</p><p>新建源代码后需要删除原来的build文件夹，重新build</p><h1 id="待解决事项"><a href="#待解决事项" class="headerlink" title="待解决事项"></a>待解决事项</h1><ul><li>可执行文件名称若为中文，理论上可以用set来将中文名称设置成变量传入执行表，还未具体操作</li><li>生成的可执行文件必须自己指定名称，而不能默认成主程序的名称</li><li>在一个工作区下临时创建一个新程序（可能用来调试），必须在CMakeLists.txt中重新指定需要编译链接的文件</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;本教程旨在帮助不想使用vs，但是又想使用VScode的调试功能而不想手动编译的人，只能最低限度满足要求，很多地方还不完善，如不支持源代码在不</summary>
      
    
    
    
    <category term="Cmake" scheme="http://example.com/categories/Cmake/"/>
    
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Cmake" scheme="http://example.com/tags/Cmake/"/>
    
  </entry>
  
  <entry>
    <title>Butterfly主题的简单配置</title>
    <link href="http://example.com/2020/08/05/Butterfly%E4%B8%BB%E9%A2%98%E7%9A%84%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2020/08/05/Butterfly%E4%B8%BB%E9%A2%98%E7%9A%84%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AE/</id>
    <published>2020-08-05T14:23:45.000Z</published>
    <updated>2020-08-05T16:47:45.618Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>导致我重做这么多遍的原因就是主题了，每次想在配置文件里搞点骚操作都会不知道哪里出了问题，只能重新搭建。最后选了butterfly主题，更改配置非常简单，不需要怎么改。</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>在博客根目录里打开Git Bush，输入命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>另外这是主题作者的网站 demo.jerryc.me 里面有最全面的配置教程。</p><h1 id="修改头部导航栏"><a href="#修改头部导航栏" class="headerlink" title="修改头部导航栏"></a>修改头部导航栏</h1><p>在butterfly文件夹中打开_config.yml文件，(若无特殊说明修改均在这个文件中进行)在文件最开始的一段代码，修改前</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Main menu navigation</span></span><br><span class="line"><span class="comment"># ---------------</span></span><br><span class="line"><span class="comment"># format: xxx: 連結 || icon</span></span><br><span class="line"><span class="comment"># sub-menu</span></span><br><span class="line"><span class="comment"># xxx || icon:</span></span><br><span class="line"><span class="comment">#   xxx || 連結 || icon</span></span><br><span class="line">menu:</span><br><span class="line">  Home: / || fa fa-home</span><br><span class="line">  Archives: /archives/ || fa fa-archive</span><br><span class="line">  Tags: /tags/ || fa fa-tags</span><br><span class="line">  Categories: /categories/ || fa fa-folder-open</span><br><span class="line">  Link: /link/ || fa fa-link</span><br><span class="line">  About: /about/ || fa fa-heart</span><br><span class="line">  List||fa fa-list:</span><br><span class="line">    - Music || /music/ || fa fa-music</span><br><span class="line">    - Movie || /movies/ || fa fa-film</span><br></pre></td></tr></table></figure><p>修改后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Main menu navigation (導航目錄)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># format: name: link || icon</span></span><br><span class="line"><span class="comment"># sub-menu</span></span><br><span class="line"><span class="comment"># name || icon:</span></span><br><span class="line"><span class="comment">#   name || link || icon</span></span><br><span class="line"></span><br><span class="line">menu:</span><br><span class="line">  首页: / || fa fa-home</span><br><span class="line">  留言板: /messageboard/ || fa fa-paper-plane</span><br><span class="line">  找文章 || fa-fw fa fa-book:</span><br><span class="line">    - 标签 || /tags/ || fa fa-tags</span><br><span class="line">    - 分类 || /categories/ || fa fa-folder-open</span><br><span class="line">    - 时间轴 || /archives/ || fa fa-archive</span><br><span class="line">  友情链接: /link/ || fas fa-link</span><br><span class="line">  关于我: /about/ || fas fa-heart</span><br></pre></td></tr></table></figure><p>注意，这里必须 &#x2F;xxx&#x2F;然后用||隔开，然后写图标名。这里我对这个没有搞懂，因此我只是把不需要的删掉然后改成了中文，一般这些就够用了；还有其他需求的可以查看原作者的文章。</p><h1 id="添加导航栏页面"><a href="#添加导航栏页面" class="headerlink" title="添加导航栏页面"></a>添加导航栏页面</h1><p>在上面的操作后，点击分类，标签这些的话会出现404界面，这是因为还没有创建相应的页面。</p><h2 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h2><p>输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><p>在Blog\source\about文件夹中会有一个markdown文件，打开并修改</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 关于我</span><br><span class="line">date: 2020-06-03 17:53:02</span><br><span class="line">type: about</span><br><span class="line"><span class="section">comments: false</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>下面写自己的介绍就可以，同理，其他页面也要先创建一个新的page</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2020-06-03 17:53:02</span><br><span class="line">type: categories</span><br><span class="line"><span class="section">comments: false</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"><span class="section">## 标签  </span></span><br><span class="line"><span class="section">```Markdown</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">title: 分类</span><br><span class="line">date: 2020-06-03 17:53:02</span><br><span class="line">type: categories</span><br><span class="line"><span class="section">comments: false</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"><span class="section">## 留言板</span></span><br><span class="line"><span class="section">```Markdown</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">title: messageboard</span><br><span class="line">date: 2020-06-10 10:25:42</span><br><span class="line"><span class="section">type: messageboard</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">(这里可以加点描述)</span><br></pre></td></tr></table></figure><h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><p>这里就是放朋友博客的链接，同样在.md文件中修改</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2020-06-03 17:53:02</span><br><span class="line">type: link</span><br><span class="line"><span class="section">comments: false</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">之后再BLOG\source目录下新建<span class="emphasis">_data文件夹，在里面新建link.yml文件，添加以下内容</span></span><br><span class="line"><span class="emphasis">```Yml</span></span><br><span class="line"><span class="emphasis">- class_</span>name: 友情鏈接</span><br><span class="line">  class<span class="emphasis">_desc: 那些人，那些事</span></span><br><span class="line"><span class="emphasis">  link_</span>list:</span><br><span class="line"><span class="bullet">    -</span> name: JerryC</span><br><span class="line"><span class="code">      link: https://jerryc.me/</span></span><br><span class="line"><span class="code">      avatar: https://jerryc.me/image/avatar.png</span></span><br><span class="line"><span class="code">      descr: 今日事,今日畢</span></span><br><span class="line"><span class="code">    - name: Hexo</span></span><br><span class="line"><span class="code">      link: https://hexo.io/zh-tw/</span></span><br><span class="line"><span class="code">      avatar: https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</span></span><br><span class="line"><span class="code">      descr: 快速、簡單且強大的網誌框架</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">-</span> class<span class="emphasis">_name: 網站</span></span><br><span class="line"><span class="emphasis">  class_</span>desc: 值得推薦的網站</span><br><span class="line">  link<span class="emphasis">_list:</span></span><br><span class="line"><span class="emphasis">    - name: Youtube</span></span><br><span class="line"><span class="emphasis">      link: https://www.youtube.com/</span></span><br><span class="line"><span class="emphasis">      avatar: https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</span></span><br><span class="line"><span class="emphasis">      descr: 視頻網站</span></span><br><span class="line"><span class="emphasis">    - name: Weibo</span></span><br><span class="line"><span class="emphasis">      link: https://www.weibo.com/</span></span><br><span class="line"><span class="emphasis">      avatar: https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png</span></span><br><span class="line"><span class="emphasis">      descr: 中國最大社交分享平台</span></span><br><span class="line"><span class="emphasis">    - name: Twitter</span></span><br><span class="line"><span class="emphasis">      link: https://twitter.com/</span></span><br><span class="line"><span class="emphasis">      avatar: https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</span></span><br><span class="line"><span class="emphasis">      descr: 社交分享平台</span></span><br></pre></td></tr></table></figure><p>具体格式就这样，剩下的自由发挥即可</p><h1 id="代码相关"><a href="#代码相关" class="headerlink" title="代码相关"></a>代码相关</h1><p>在配置文件中找到以下代码</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Code Blocks (代碼相關)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">highlight_theme:</span> <span class="string">mac</span> <span class="comment"># default / darker / pale night / light / ocean / mac / false</span></span><br><span class="line"><span class="attr">highlight_copy:</span> <span class="literal">true</span> <span class="comment"># copy button</span></span><br><span class="line"><span class="attr">highlight_lang:</span> <span class="literal">true</span> <span class="comment"># show the code language</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="literal">false</span> <span class="comment"># true: shrink the code blocks / false: expand the code blocks | none: expand code blocks and hide the button</span></span><br><span class="line"><span class="attr">code_word_wrap:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>第一行是代码主题，可以在注释中给出的几种任意选择，选个看的顺眼的就好。第二行第三行注释说的很清楚了。最后两行不用管。</p><h1 id="添加搜索功能"><a href="#添加搜索功能" class="headerlink" title="添加搜索功能"></a>添加搜索功能</h1><p>在配置文件中找到如下内容并修改</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></span><br><span class="line">    <span class="attr">hits_empty:</span> <span class="string">&quot;We didn&#x27;t find any results for the search: $&#123;query&#125;&quot;</span> <span class="comment"># if there are no result</span></span><br></pre></td></tr></table></figure><p>之后安装搜索插件，输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><h1 id="图片及背景修改"><a href="#图片及背景修改" class="headerlink" title="图片及背景修改"></a>图片及背景修改</h1><h2 id="头像和网站图标"><a href="#头像和网站图标" class="headerlink" title="头像和网站图标"></a>头像和网站图标</h2><p>将你想使用的头像图片和网站图标放在butterfly&#x2F;source&#x2F;img文件夹中，找到如下代码</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Favicon（網站圖標）</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/img/favicon.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Avatar (頭像)</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">/img/avatar.jpeg</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>分别把路径写入即可</p><h2 id="横幅背景"><a href="#横幅背景" class="headerlink" title="横幅背景"></a>横幅背景</h2><p>找到代码</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># if the banner of page not setting,it will show the top_img</span></span><br><span class="line"><span class="attr">default_top_img:</span> <span class="string">https://i.loli.net/2020/05/01/IuWi8QbHvzjlOPw.jpg</span></span><br></pre></td></tr></table></figure><p>把链接换成自己找到的图片链接即可，我这里直接用了一个大佬的图片</p><h2 id="博客背景"><a href="#博客背景" class="headerlink" title="博客背景"></a>博客背景</h2><p>找到代码</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Website Background (設置網站背景)</span></span><br><span class="line"><span class="comment"># can set it to color or image (可設置圖片 或者 顔色)</span></span><br><span class="line"><span class="comment"># The formal of color: &#x27;#49B202&#x27;</span></span><br><span class="line"><span class="comment"># The formal of image: url(http://xxxxxx.com/xxx.jpg)</span></span><br><span class="line"><span class="comment"># White color will be shown as default</span></span><br><span class="line"><span class="attr">background:</span> <span class="string">url(https://cdn.jsdelivr.net/gh/lete114/CDN@2.0/Use/Jkx5y6.jpg)</span></span><br></pre></td></tr></table></figure><p>这里注释说的也很清楚了，要设置为颜色就百度一下想要的颜色，设置为图片就在链接前加url和括号。</p><h2 id="页脚背景"><a href="#页脚背景" class="headerlink" title="页脚背景"></a>页脚背景</h2><p>更改完背景后可以发现拉到最下面页脚部分的背景还是默认的，非常不和谐，打开Butterfly\source\css_layout\footer.styl，把background: $light-blue这一行注释掉即可</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#footer</span></span><br><span class="line">  <span class="attribute">position</span>: relative</span><br><span class="line">  //background: $light-blue</span><br><span class="line">  background-attachment: local</span><br><span class="line">  background-position: bottom</span><br><span class="line">  background-size: cover</span><br></pre></td></tr></table></figure><h1 id="更新中"><a href="#更新中" class="headerlink" title="更新中"></a>更新中</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;导致我重做这么多遍的原因就是主题了，每次想在配置文件里搞点骚操作都会不知道哪里出了问题，只能重新搭建。最后选了butterfly主题，更改配</summary>
      
    
    
    
    <category term="Hexo" scheme="http://example.com/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>hexo github个人博客搭建</title>
    <link href="http://example.com/2020/07/23/hexo-github%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>http://example.com/2020/07/23/hexo-github%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</id>
    <published>2020-07-23T10:45:04.000Z</published>
    <updated>2021-01-07T05:25:01.691Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>　　一直很羡慕大佬室友的个人网站，在大佬推荐下决定用hexo框架也搭一个自己的博客，但是网上的教程都比较简略，在综合了好多教程以及自己百度了一些问题后才算是搭了起来。所以决定第一篇博客就写我的搭建过程，用来整理一下思路，还有可能以后有小伙伴想要搭建博客的时候我也可以帮上忙。（这篇其实很早就开始写了，但是由于拖延症和把yilia主题玩坏了才拖了这么久。）</p><h1 id="前期环境的安装"><a href="#前期环境的安装" class="headerlink" title="前期环境的安装"></a>前期环境的安装</h1><h2 id="githunb创建个人仓库"><a href="#githunb创建个人仓库" class="headerlink" title="githunb创建个人仓库"></a>githunb创建个人仓库</h2><p>　　因为我们的网站是托管在github上的,所以我们需要注册一个github账号,注册好后在左上角的Repositories(仓库)点击new创建新仓库,命名规则为 用户名.github.io 创建好后就可以了。</p><h2 id="安装git并与GitHub绑定"><a href="#安装git并与GitHub绑定" class="headerlink" title="安装git并与GitHub绑定"></a>安装git并与GitHub绑定</h2><p>　　简单地说，git就是一个管理代码的工具，同时也可以进行类似cmd的命令行操作（粗糙的个人理解），我们的网站在本地搭建好以后，需要使用GIT同步到GitHub上。下载链接 <a href="http://rogerdudler.github.io/git-guide/index.zh.html">http://rogerdudler.github.io/git-guide/index.zh.html</a> 同时附有简单的配置教程。安装好后需要将git与GitHub绑定，右击打开Git Bash<br><img src="https://pic2.zhimg.com/80/v2-8b1cbe253d6e0301bd9a68c6f98a9f52_720w.jpg" alt="Git Bash"><br>依次输入命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的GitHub注册邮箱&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><p>然后找到生成的.ssh文件夹中的id_rsa.pub密钥,将内容全部复制<br><img src="https://wx1.sbimg.cn/2020/07/24/D8cAT.png" alt="D8cAT.png"><br>打开GitHub_Settings_keys 页面，新建new SSH Key<br><img src="https://pic1.zhimg.com/80/v2-72a3f22c080e99343c3cc4aabce10e3c_720w.jpg" alt="截图"><br>Title任意填写,将密钥内容粘贴进去,添加.然后在Git bush中检测GitHub公钥是否设置成功,输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh git@github.com</span><br></pre></td></tr></table></figure><p>如出现下图则设置成功,设置的目的是为了省区每次推送时输入密码的步骤,并保证每次推送都是正确合法的.<br><a href="https://sbimg.cn/image/D8gTo"><img src="https://wx1.sbimg.cn/2020/07/24/D8gTo.md.png" alt="D8gTo.md.png"></a></p><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>　　hexo是基于Node.js,下载链接<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a> 安装好后继续输入命令行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>　　若出现版本号,则安装成功</p><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><p>终于到正题啦,Hexo是个人博客网站的框架,这里需要自己创建一个文件夹,可以命名为BLOG,Hexo框架与之后写的文章都会放在这里,创建好后,进入文件夹,这里我看的教程是按住shift键,右击鼠标打开powershell进行命令行操作,但是需要在设置中搜索powershell并允许本地powershell脚本在不签名的情况下运行.而且之后还出现了无法访问本地4000端口的情况,因此最后还是使用GitBush进行命令行操作,即在BLOG文件夹内右击鼠标打开Git Bush,输入:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>第一条命令为安装Hexo,第二条为初始化博客<br>接下来要记住常用的命令</p><p>hexo n “我的博客” &#x3D;&#x3D; hexo new “我的博客” #新建文章<br>hexo g &#x3D;&#x3D; hexo generate #生成<br>hexo s &#x3D;&#x3D; hexo server #本地预览<br>hexo d &#x3D;&#x3D; hexo deploy #部署<br>hexo clean #我不知道是干嘛用的但是每次在hexo g命令前都要输一遍,好累啊明天再查是干嘛用的就先这么写吧.<br>然后,为了初步检测一下我们的网站,输入以下几条命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new test_my_site</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>完成后,打开浏览器输入地址 localhost:4000 就可以看到啦,这里放我看的教程的图片,大致上应该相同<br><img src="https://pic4.zhimg.com/80/v2-123e73c0630d299b1c856d99b04b55bb_720w.jpg" alt="jpg"><br>如果无法本地预览的话，可能是4000端口被占用，一般来说只有福昕阅读器这个软件会占用4000端口。可以卸载掉它或者使用命令 hexo server -p 5000 将本地预览的端口改到5000。我这里之前使用powershell进行命令行操作，到本地预览这一步也出现了问题，但是4000端口并没有被占用，也搜不到相关的问题，最后改用Git Bush。</p><h1 id="推送网站"><a href="#推送网站" class="headerlink" title="推送网站"></a>推送网站</h1><p>　　本地预览没有问题的话，就可以推送网站了。首先再BLOG目录下找到_config.yml文件，这是站点配置文件。打开后翻到最后，找到如下代码</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:Gitspike/Gitspike.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>type那里改成git，repo那一行，冒号后面的格式为用户名&#x2F;仓库名.git  不过仓库名那里大小写都无所谓。最后将branch改为master。初始的文件里repo和branch行可能都没有，要自己添加。<br>然后在文件最开始</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Spike&#x27;s</span> <span class="string">blogs</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Spike</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>修改title(网站标题)，author（作者），语言那里根据主题文件夹中languages中的语言调整，一般来说改成zh-CN就可以。然后保存修改。最后安装Git部署插件，输入命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后分别输入三条命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>之后在浏览器输入仓库路径就可以访问博客了，即 用户名.github.io</p><h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><p>　　hexo有许多主题可供选择，传送门 <a href="https://hexo.io/themes/">https://hexo.io/themes/</a> 。一开始下载的是yilia主题，但是这个主题太过简约，我在增加标签页和分类页时出了大问题，文章内容不显示，控制台发现页面上没有html标签，也想不出来是什么原因，只好重装一遍，这次用了butterfly主题，常用的功能都是现成的，非常方便。简单的配置就等下一篇再说吧。</p><h1 id="常用Markdown语法"><a href="#常用Markdown语法" class="headerlink" title="常用Markdown语法"></a>常用Markdown语法</h1><h2 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h2><p>　　博客文章一般使用Markdown语言来写，这是一种简单的标记语言，而且支持嵌入html代码。我是使用VS code进行编辑，这样在侧面可以预览文章效果。<br>　　同样在BLOG目录下打开Git Bush，输入命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n 博客名字</span><br></pre></td></tr></table></figure><p>在BLOG目录中source文件夹中的_post文件夹中，会找到相应的博客文件，打开可以看到最顶端有一段</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo github个人博客搭建</span><br><span class="line">date: 2020-07-23 18:45:04</span><br><span class="line">comments: true</span><br><span class="line">tags: </span><br><span class="line"><span class="bullet">  -</span> Hexo</span><br><span class="line"><span class="bullet">  -</span> 笔记</span><br><span class="line">categories:</span><br><span class="line"><span class="section">  - Hexo</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>这部分的内容先不用管，在这一段下面开始写文章。<br>##标题及段首空格<br>Markdown语言支持六级标题，每一级标题前就是几个星号，再加上空格<br>比如</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br></pre></td></tr></table></figure><p>这里建议每个标题后打三个空格，不然有可能文章被推送到网站上时不显示标题，我之前用yilia主题就是这样。另外，我写的时候想在段首空两格，但是输入两个空格也还是显示顶格，后来查到只要在中文输入下用全角符号输入两个空格就可以解决，不过，再编辑器预览的时候还是不会有空格，只有推送到网站上才显示。</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>Markdown支持有序列表和无序列表，有序列表在最开始使用星号加一个空格，如下</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> 第一项</span><br><span class="line"><span class="bullet">*</span> 第二项</span><br><span class="line"><span class="bullet">*</span> 第三项</span><br></pre></td></tr></table></figure><p>有序列表则用数字加.加空格</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项</span><br><span class="line"><span class="bullet">2.</span> 第二项</span><br><span class="line"><span class="bullet">3.</span> 第三项</span><br></pre></td></tr></table></figure><p>如果想要嵌套，只要在子列表之前添加四个空格</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项：</span><br><span class="line"><span class="bullet">    -</span> 第一项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    -</span> 第一项嵌套的第二个元素</span><br><span class="line"><span class="bullet">2.</span> 第二项：</span><br><span class="line"><span class="bullet">    -</span> 第二项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    -</span> 第二项嵌套的第二个元素</span><br></pre></td></tr></table></figure><h2 id="插入代码"><a href="#插入代码" class="headerlink" title="插入代码"></a>插入代码</h2><p>Markdown插入代码有两种简单的方法。<br>第一种，在代码区块前空一行，然后在每一行代码前加四个空格。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">空行</span><br><span class="line"><span class="code">    代码</span></span><br><span class="line"><span class="code">    代码</span></span><br></pre></td></tr></table></figure><p>但是这种方法在使用butterfly主题时无法使用全部复制的按钮，所以我采用了第二种：用两行&#96;&#96;&#96;把代码块包裹起来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">三个`</span><br><span class="line">代码</span><br><span class="line">三个`</span><br></pre></td></tr></table></figure><p>同时第一行的三个&#96;&#96;后可以写上代码种类，butterfly的主题也会显示，但是我不知道为什么不显示，这个问题还没解决。（这里我写三个&#96;是因为我发现编辑器不能判断&#96;&#96;&#96;是代表要插入代码还是被插入的代码，太难了…）</p><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>插入图片有两种方法，分别是本地图片和链接，但是插入太多本地图片会导致加载速度变慢，我自己觉得是因为本地图片都被上传到github的仓库里，访问的时候从github下载图片，然后github那个一言难尽的访问速度…所以使用图片链接比较好<br>在需要插入图片的地方，输入 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![alt 属性文本](图片地址)</span><br></pre></td></tr></table></figure><p>方括号内的是图片描述，括号里的是链接，链接可以直接放你在网页上看到的图片链接（比如我前面有两张图片直接嫖了我看的教程里的图片链接），也可以使用图床，上传本地的图片然后生成链接。一般常用的图床有七牛图床，但是超流量以后要钱，那我自然使用免费图床，我找到了一个叫公益图床的免费网站，上传图片后会自动生成适用于各种情况的图片链接。然后我本地也新建了一个文件夹备份这些图片，毕竟这种小网站没准哪天就没了。</p><p>暂时就这么多吧，以后写文章需要新的语法时还会再做笔记。总的来说，搭博客的过程给我最大的感受就是要有耐心，尤其在配置主题的时候，很可能哪里疏忽就导致整个网页出了问题，而且往往还找不出来到底哪里不对，这种时候只能重装，真的很考验心态（也可能只是我太菜才有这么多问题）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;　　一直很羡慕大佬室友的个人网站，在大佬推荐下决定用hexo框架也搭一个自己的博客，但是网上的教程都比较简略，在综合了好多教程以及自己百度了</summary>
      
    
    
    
    <category term="Hexo" scheme="http://example.com/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
